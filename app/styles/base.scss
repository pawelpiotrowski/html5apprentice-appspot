@import 'variables';
@import 'images';
@import 'mixins';
@import 'reset';
@import 'fonts';
@import 'animations';

// Fonts

%cursiveLatinBold { font-family: "VeljovicScriptLTW02-Bol", cursive; }
%cursiveLatinMedium { font-family: "VeljovicScriptLTW02-Med", cursive; }
%cursiveLatinRegular { font-family: "VeljovicScriptLTW02-Reg", cursive; }
%cursiveLatinLight { font-family: "VeljovicScriptLTW02-Lig", cursive; }

%cursiveCyrillicBold { font-family: "VeljovicScriptLTW10-Bol", cursive; }
%cursiveCyrillicMedium { font-family: "VeljovicScriptLTW10-Med", cursive; }
%cursiveCyrillicRegular { font-family: "VeljovicScriptLTW10-Reg", cursive; }
%cursiveCyrillicLight { font-family: "VeljovicScriptLTW10-Lig", cursive; }

// Background images

%pageBckgdImg { background-image: url($psNeutralImg); }

// Layout

%full { height: 100%; width: 100%; }
%screenCentered { align-items: center; display: flex; flex-flow: row; justify-content: center; }

// Helpers

%cursorPointer { cursor: pointer; }

%frameBorder {
    border-color: #AD9B5C;
    border-image-source: url($frameBorderImg);
    border-image-slice: 45;
    border-image-repeat: round;
    border-style: solid;
}

%frameBorderBckgd {
    background-image: url('/images/frame-border.svg');
    background-repeat: no-repeat;
    background-size: 100% 100%;
}

html, body {
    background-color: $pageBckgd;
    color: $pageColor;
    overflow: hidden;
    @extend %full;
}

body {
    @extend %pageBckgdImg;
    font-family: Palatino, "Palatino Linotype", "Palatino LT STD", Georgia, serif;
    font-size: 100%;
    line-height: 1.4;
}

a {
    color: inherit;
}

// Palettes classes
$allPalettesMain: append($palettes_main, $palette_main_default);
$allPalettesContra: append($palettes_contra, $palette_contra_default);
$allPalettesCount: length($allPalettesMain);

@for $i from 1 through $allPalettesCount {
    
    $thisSectionPalette: if($i == 4, $paletteDefault, #{$palette}-#{$i});
    $thisColorMain: nth($allPalettesMain, $i);
    $thisColorContra: nth($allPalettesContra, $i);

    $atRootPalettePrefix: if($i == 4, $p_default, -#{$i});

    .#{$section}#{$thisSectionPalette} {
        @for $j from 1 through 2 {
            $thisPalette: if($j == 1, $paletteMain, $paletteContra);
            $thisColor: if($j == 1, $thisColorMain, $thisColorContra);
            // .palette-main || .palette-contra
            .#{$thisPalette}-bckgd {
                background-color: $thisColor;
            }
            .#{$thisPalette}-border {
                border-color: $thisColor;
            }
            .#{$thisPalette}-color {
                color: $thisColor;
            }
        }
    }
    
    @for $k from 1 through 2 {
        
        $atRootPalette: $paletteSlug + $atRootPalettePrefix + if($k == 1, $p_main, $p_contra);
        $thisColor: if($k == 1, $thisColorMain, $thisColorContra);
        // palette-{type}-main || palette-{type}-contra
        .#{$atRootPalette}-bckgd {
            background-color: $thisColor;
        }
        .#{$atRootPalette}-border {
            border-color: $thisColor;
        }
        .#{$atRootPalette}-color {
            color: $thisColor;
        }
    }
}